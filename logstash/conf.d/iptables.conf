input {
	file {
	    path => "/var/log/iptables.log"
	    type => "iptables"
	    tags=> ["firewall"]
	}
}
 
 
filter {
    # IPTABLES
    if "firewall" in [tags] {
        grok {
        match => { 

            message =>"%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} kernel: \[%{NOTSPACE:kernel}\] IPTables-Dropped: IN=(%{WORD:in_interface}) OUT=(%{WORD:out_interface}?) MAC=(%{NOTSPACE:mac}) SRC=(%{IPV4:src_ip}) DST=(%{IPV4:dst_ip}) LEN=(%{POSINT:length}) TOS=(%{NOTSPACE:TOS}) PREC=(%{NOTSPACE:PREC}) TTL=(%{POSINT:TTL}) ID=(%{POSINT:ID})(?:\s+%{NOTSPACE})? PROTO=(%{NOTSPACE:protocol})(?:\s+TYPE=%{NUMBER:type} CODE=%{NUMBER:code} ID=%{NUMBER:ICMPID} SEQ=%{NUMBER:SEQ})?(?:\s+SPT=%{POSINT:SRCPort} DPT=%{POSINT:DSTPort} %{GREEDYDATA:OPTIONS})?"

        }
    }
    date {
        match => ["timestamp", "UNIX"]
    }

     mutate {
        remove_field => [ "timestamp", "message" ]
            convert => { 
            "length" => "integer" 
            }
        }   
        # Default 'geoip' == src_ip. That means it's easy to display the DROPPED INPUT :)
        if [src_ip] != "" {
            geoip {
                source => "src_ip"
                add_tag => [ "geoip" ]
                target => "src_geoip"
            }
        }
        if [dst_ip] != "" {
            geoip {
                source => "dst_ip"
                add_tag => [ "geoip" ]
                target => "dst_geoip"
            }
        }
    }
}

output {

if "firewall" in [tags]{
		  elasticsearch {
        		hosts => ["localhost:9200"]
			index => "firewall-%{+YYYY.MM.dd}"
	    }
	}
}
